<?xml version="1.0"?>
<ruleset name="Custom ruleset" xmlns="http://pmd.sf.net/ruleset/1.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://pmd.sf.net/ruleset/1.0.0 http://pmd.sf.net/ruleset_xml_schema.xsd"
	xsi:noNamespaceSchemaLocation="http://pmd.sf.net/ruleset_xml_schema.xsd">

	<description>
  This ruleset checks my code for bad stuff
	</description>
	<exclude-pattern>.*/org/apache/.*</exclude-pattern>
	<exclude-pattern>.*/com/github/.*</exclude-pattern>
	<exclude-pattern>.*/com/google/.*</exclude-pattern>
	<exclude-pattern>.*/edu/uci/.*</exclude-pattern>
	<exclude-pattern>.*/org/geogebra/common/kernel/parser/.*</exclude-pattern>	
	<exclude-pattern>.*/org/geogebra/common/kernel/prover/polynomial/.*</exclude-pattern>
	<!-- We'll use the entire 'strings' ruleset -->
	<rule ref="rulesets/java/strings.xml">
		<exclude name="ConsecutiveAppendsShouldReuse" />
		<exclude name="AppendCharacterWithChar" />
		<exclude name="AvoidDuplicateLiterals" />
		<exclude name="AvoidStringBufferField" />
		<exclude name="UseIndexOfChar" />
		<exclude name="InsufficientStringBufferDeclaration" />
		<exclude name="ConsecutiveLiteralAppends" />
		<!-- string constructors handled by FindBugs -->
		<exclude name="StringInstantiation" />
	</rule>

	<!-- Here's some rules we'll specify one at a time -->
	<rule ref="rulesets/java/unusedcode.xml">
	</rule>

	<rule ref="rulesets/java/unnecessary.xml">
		<exclude name="UnnecessaryModifier" />
		<exclude name="UselessParentheses"/>
		<exclude name="UselessOverridingMethod"/>
	</rule>

	<rule ref="rulesets/java/braces.xml">
	</rule>
	
	<rule ref="rulesets/java/empty.xml">
		<exclude name="EmptyCatchBlock"/>
		<exclude name="EmptyIfStmt"/>
	</rule>
	<rule ref="rulesets/java/codesize.xml/ExcessiveClassLength">
	<properties>
        	<property name="minimum" value="5500"/>
                <property name="violationSuppressXPath" value="//ClassOrInterfaceDeclaration[@Image='AlgoKimberlingWeights']
| //ClassOrInterfaceDeclaration[@Image='EuclidianController']
| //ClassOrInterfaceDeclaration[@Image='EuclidianView']
| //ClassOrInterfaceDeclaration[@Image='Kernel']
| //ClassOrInterfaceDeclaration[@Image='GeoElement']"/>
    	</properties>
	</rule>
	<rule ref="rulesets/java/imports.xml">
		<exclude name="TooManyStaticImports"/>
	</rule>
	<rule ref="rulesets/java/design.xml">
	<exclude name="ImmutableField"/>
	<exclude name="ConstructorCallsOverridableMethod"/>
	<exclude name="UseVarargs"/>
	<exclude name="DefaultLabelNotLastInSwitchStmt"/>
	<exclude name="SingularField"/>
	<exclude name="UnnecessaryLocalBeforeReturn"/>
	<exclude name="GodClass"/>
	<exclude name="MissingBreakInSwitch"/>
	<exclude name="ReturnEmptyArrayRatherThanNull"/>
	<exclude name="EmptyMethodInAbstractClassShouldBeAbstract"/>
	<exclude name="NonThreadSafeSingleton"/>
	<exclude name="ConfusingTernary"/>
	<exclude name="SwitchStmtsShouldHaveDefault"/>
	<exclude name="SwitchDensity"/>
	<exclude name="UseCollectionIsEmpty"/>
	<exclude name="ConstantsInInterface"/>
	<exclude name="CompareObjectsWithEquals"/>
	<exclude name="AvoidSynchronizedAtMethodLevel"/>
	<exclude name="TooFewBranchesForASwitchStatement"/>
	<exclude name="UseUtilityClass"/>
	<exclude name="AccessorMethodGeneration"/>
	<exclude name="SimplifyBooleanReturns"/>
	<exclude name="UseLocaleWithCaseConversions"/>
	<exclude name="ConstantsInInterface"/>
	<exclude name="AbstractClassWithoutAbstractMethod"/>
	<exclude name="UncommentedEmptyConstructor"/>
	<exclude name="OptimizableToArrayCall"/>
	<exclude name="AbstractClassWithoutAnyMethod"/>
	<exclude name="PreserveStackTrace"/>
	
	</rule>
	<rule ref="rulesets/java/design.xml/AvoidDeeplyNestedIfStmts">
    <properties>
        <property name="problemDepth" value="4"/>
    </properties>
  </rule>
	<rule ref="rulesets/java/basic.xml">
		<exclude name="CollapsibleIfStatements" />
		<exclude name="AvoidDecimalLiteralsInBigDecimalConstructor" />		
	</rule>
	 <rule name="AbstractClassWithoutAnyMethod"
          language="java"
          since="4.2"
          class="net.sourceforge.pmd.lang.rule.XPathRule"
          typeResolution="true"
          message="Common project should define abstract methods in interfaces."
          externalInfoUrl="${pmd.website.baseurl}/pmd_rules_java_design.html#abstractclasswithoutanymethod">
        <description>
Common project should define abstract methods in interfaces.
        </description>
        <priority>1</priority>
        <properties>
            <property name="xpath">
                <value>
<![CDATA[
//ClassOrInterfaceDeclaration
    [@Abstract = 'true']
    [count(//MethodDeclaration[@Abstract = 'true']) > 45]
]]>
                </value>
            </property>
        </properties>
        <example>
<![CDATA[
public abstract class Example {
    String field;
    int otherField;
}
]]>
        </example>
    </rule>
</ruleset>
